name: Java CI with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up JDK
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '22'

    # Cache Maven dependencies
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Build the project
    - name: Build with Maven
      run: mvn clean verify

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


    # # SonarQube scan
    # - name: SonarCloud Scan
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     SONARCLOUD_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
    #     SONARCLOUD_ORG: 'pchmielecki87'
    #     SONARCLOUD_PROJECT_KEY: 'java_cicd_sonarqube_githubactions'
    #   run: |
    #     mvn -X sonar:sonar \
    #     -Dsonar.host.url=https://sonarcloud.io \
    #     -Dsonar.organization=${SONARCLOUD_ORG} \
    #     -Dsonar.projectKey=${SONARCLOUD_PROJECT_KEY} \
    #     -Dsonar.login=${SONARCLOUD_TOKEN} \
    #     -Dsonar.java.binaries=target/classes \
    #     -Dsonar.scm.provider=git \
    #     -Dsonar.qualitygate.wait=true